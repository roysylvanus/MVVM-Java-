plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.roysylva.countriesapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures{
        viewBinding true
    }
}
def lifecycle_version = "2.4.1"
def arch_version = "2.1.0"
def butterKnifeVers = '10.2.3'
def retrofitVers = '2.4.0'
def glideVer = '4.9.0'
def mockitoVer = '3.1.0'
def daggerVer = '2.35.1'
def rxJavaVer = '3.0.0'

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "org.mockito:mockito-inline:$mockitoVer"

    implementation 'com.google.code.gson:gson:2.9.0'


    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVers"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVers"

    implementation "io.reactivex.rxjava3:rxandroid:$rxJavaVer"
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVer"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVers"

    //glide

    implementation "com.github.bumptech.glide:glide:$glideVer"

    //dagger
    implementation "com.google.dagger:dagger:$daggerVer"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVer"

    implementation "com.google.dagger:dagger-android:$daggerVer"
    implementation "com.google.dagger:dagger-android-support:$daggerVer" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVer"


}